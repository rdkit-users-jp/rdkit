# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Greg Landrum
# This file is distributed under the same license as the The RDKit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: The RDKit 2017.09\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-23 11:34+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../Install.md:3
msgid ""
"Below a number of installation recipes is presented, with varying degree "
"of complexity."
msgstr ""

#: ../../Install.md:9
msgid ""
"Conda is an open-source, cross-platform, software package manager. It "
"supports the packaging and distribution of software components, and "
"manages their installation inside isolated execution environments. It has"
" several analogies with pip and virtualenv, but it is designed to be more"
" \"python-agnostic\" and more suitable for the distribution of binary "
"packages and their dependencies."
msgstr ""

#: ../../Install.md:13
msgid ""
"The easiest way to get Conda is having it installed as part of the "
"Anaconda Python distribution. A possible (but a bit more complex to use) "
"alternative is provided with the smaller and more self-contained "
"Miniconda. The conda source code repository is available on github and "
"additional documentation is provided by the project website."
msgstr ""

#: ../../Install.md:17
msgid ""
"Creating a new conda environment with the RDKit installed using these  "
"packages requires one single command similar to the following::"
msgstr ""

#: ../../Install.md:19
msgid "$ conda create -c rdkit -n my-rdkit-env rdkit"
msgstr ""

#: ../../Install.md:21
msgid ""
"Finally, the new environment must be activated, so that the corresponding"
" python interpreter becomes available in the same shell:"
msgstr ""

#: ../../Install.md:23
msgid "$ source activate my-rdkit-env"
msgstr ""

#: ../../Install.md:25
msgid "If for some reason this does not work, try:"
msgstr ""

#: ../../Install.md:27
msgid "$ cd [anaconda folder]/bin $ source activate my-rdkit-env"
msgstr ""

#: ../../Install.md:30
msgid "Windows users will use a slightly different command:"
msgstr ""

#: ../../Install.md:32
msgid "C:> activate my-rdkit-env"
msgstr ""

#: ../../Install.md:36
msgid ""
"For more details on building from source with Conda, see the conda-rdkit "
"repository."
msgstr ""

#: ../../Install.md:40
msgid ""
"The following commands will create a development environment for macOS "
"Sierra and Python 3. Download Miniconda3-latest-MacOSX-x86_64.sh from "
"Conda and run these following commands:"
msgstr ""

#: ../../Install.md:55
msgid ""
"Optionally, add the following packages to your environment as useful "
"development tools."
msgstr ""

#: ../../Install.md:60
msgid ""
"Then follow the usual build instructions. The PYTHON_INCLUDE_DIR must be "
"set in the cmake command."
msgstr ""

#: ../../Install.md:69
msgid ""
"Once \"make\" and \"make install\" completed successfully, use the "
"following command to run the tests:"
msgstr ""

#: ../../Install.md:73
msgid ""
"This is required due to the System Integrity Protection SIP introduced in"
" more recent macOS versions."
msgstr ""

#: ../../Install.md:78
msgid ""
"Due to the conda python distribution being a different version to the "
"system python, it is easiest to install PostgreSQL and the PostgreSQL "
"python client via conda."
msgstr ""

#: ../../Install.md:80
msgid "With your environment activated, this is done simply by:"
msgstr ""

#: ../../Install.md:84
msgid ""
"The conda packages PostgreSQL version needs to be initialized by running "
"the initdb command found in [conda folder]/envs/my-rdkit-env/bin"
msgstr ""

#: ../../Install.md:88
msgid "PostgreSQL can then be run from the terminal with the command:"
msgstr ""

#: ../../Install.md:92
msgid ""
"For most use cases you will instead need to run PostgreSQL as a daemon, "
"one way to do this is using supervisor. You can find out more and how to "
"install supervisor here. The required configuration file will look "
"something like this:"
msgstr ""

#: ../../Install.md:99
msgid ""
"Once PostgreSQL is up and running, all of the normal PostgreSQL commands "
"can then be run when your conda environment is activated. Therefore to "
"create a database you can run:"
msgstr ""

#: ../../Install.md:105
msgid ""
"If you are trying to use multiple installations of PostgreSQL in "
"different environments, you will need to setup different pid files, unix "
"sockets and ports by editing the PostgreSQL config files. With the above "
"configurations these files can be found in "
"/folder/where/data/should/be/stored."
msgstr ""

#: ../../Install.md:113
msgid ""
"Thanks to the efforts of the Debichem team, RDKit is available via the "
"Ubuntu repositories. To install:"
msgstr ""

#: ../../Install.md:119
msgid ""
"Thanks to Gianluca Sforna's work, binary RPMs for the RDKit are now part "
"of the official Fedora repositories: "
"https://admin.fedoraproject.org/pkgdb/package/rpms/rdkit/"
msgstr ""

#: ../../Install.md:124
msgid ""
"Eddie Cao has produced a homebrew formula that can be used to easily "
"build the RDKit https://github.com/rdkit/homebrew-rdkit"
msgstr ""

#: ../../Install.md:134
msgid "Install the following packages using apt-get:"
msgstr ""

#: ../../Install.md:140
msgid "Install the following packages using yum:"
msgstr ""

#: ../../Install.md:144
msgid "Packages to install from source (not required on RHEL/CentOS 6.x):"
msgstr ""

#: ../../Install.md:152
msgid ""
"Here things are more difficult. Check this wiki page for information: "
"https://code.google.com/p/rdkit/wiki/BuildingOnCentOS"
msgstr ""

#: ../../Install.md:175
msgid ""
"If your linux distribution has a boost-devel package including the "
"python, regex, threading, and serialization libraries, you can use that "
"and save yourself the steps below."
msgstr ""

#: ../../Install.md:193
msgid "Fetch the source, here as tar.gz but you could use git as well:"
msgstr ""

#: ../../Install.md:212
msgid "See below for a list of FAQ and solutions."
msgstr ""

#: ../../Install.md:223
msgid "You need to tell cmake where to find the boost libraries and header files:"
msgstr ""

#: ../../Install.md:225
msgid "If you have put boost in /opt/local, the cmake invocation would look like:"
msgstr ""

#: ../../Install.md:229
msgid ""
"Note that if you are using your own boost install on a system with a "
"system install, it's normally a good idea to also include the argument -D"
" Boost_NO_SYSTEM_PATHS=ON in your cmake command."
msgstr ""

#: ../../Install.md:233
msgid ""
"If you aren't using the default python installation for your computer, "
"You need to tell cmake where to find the python library it should link "
"against and the python header files."
msgstr ""

#: ../../Install.md:235
msgid "Here's a sample command line:"
msgstr ""

#: ../../Install.md:239
msgid ""
"The PYTHON_EXECUTABLE part is optional if the correct python is the first"
" version in your PATH."
msgstr ""

#: ../../Install.md:243
msgid "You can completely disable building of the python wrappers:"
msgstr ""

#: ../../Install.md:255
msgid "Additional Requirements"
msgstr ""

#: ../../Install.md:259
msgid "Building"
msgstr ""

#: ../../Install.md:264
msgid "Using the wrappers"
msgstr ""

#: ../../Install.md:266
msgid ""
"To use the wrappers, the three files need to be in the same directory, "
"and that should be on your CLASSPATH and in the java.library.path. An "
"example using jython:"
msgstr ""

#: ../../Install.md:285
msgid "In each case I've replaced specific pieces of the path with ...."
msgstr ""

#: ../../Install.md:287 ../../Install.md:305
msgid "Problem: :"
msgstr ""

#: ../../Install.md:297 ../../Install.md:312 ../../Install.md:324
msgid "Solution:"
msgstr ""

#: ../../Install.md:299
msgid "Add this to the arguments when you call cmake: -DBoost_USE_STATIC_LIBS=OFF"
msgstr ""

#: ../../Install.md:301
msgid ""
"More information here: http://www.mail-archive.com/rdkit-"
"discuss@lists.sourceforge.net/msg01119.html"
msgstr ""

#: ../../Install.md:314
msgid ""
"Add #define BOOST_PYTHON_NO_PY_SIGNATURES at the top of "
"Code/GraphMol/Wrap/EditableMol.cpp"
msgstr ""

#: ../../Install.md:316
msgid ""
"More information here: http://www.mail-archive.com/rdkit-"
"discuss@lists.sourceforge.net/msg01178.html"
msgstr ""

#: ../../Install.md:320 ../../Install.md:332
msgid "Problem:"
msgstr ""

#: ../../Install.md:322
msgid ""
"Your system has a version of boost installed in /usr/lib, but you would "
"like to force the RDKit to use a more recent one."
msgstr ""

#: ../../Install.md:326
msgid ""
"This can be solved by using cmake version 2.8.3 (or more recent) and "
"providing the -D Boost_NO_SYSTEM_PATHS=ON argument:"
msgstr ""

#: ../../Install.md:334
msgid "Building on OS X with XCode 4"
msgstr ""

#: ../../Install.md:336
msgid ""
"The problem seems to be caused by the version of numpy that is "
"distributed with XCode 4, so you need to build a fresh copy."
msgstr ""

#: ../../Install.md:338
msgid "Solution: Get a copy of numpy and build it like this as root: as root:"
msgstr ""

#: ../../Install.md:348
msgid "Be sure that the new numpy is used in the build:"
msgstr ""

#: ../../Install.md:352
msgid "and is at the beginning of the PYTHONPATH:"
msgstr ""

#: ../../Install.md:356
msgid "Now it's safe to build boost and the RDKit."
msgstr ""

#: ../../Install.md:383
msgid ""
"In Win7 systems, you may run into trouble due to missing DLLs, see one "
"thread from the mailing list: http://www.mail-archive.com/rdkit-"
"discuss@lists.sourceforge.net/msg01632.html You can download the missing "
"DLLs from here: http://www.microsoft.com/en-"
"us/download/details.aspx?id=5555"
msgstr ""

#: ../../Install.md:396
msgid ""
"This section assumes that python is installed in C:\\Python27, that the "
"boost libraries have been installed to C:\\boost, and that you will build"
" the RDKit from a directory named C:\\RDKit. If any of these conditions "
"is not true, just change the corresponding paths."
msgstr ""

#: ../../Install.md:428
msgid "This document is copyright (C) 2012-2016 by Greg Landrum"
msgstr ""

#: ../../Install.md:430
msgid ""
"This work is licensed under the Creative Commons Attribution-ShareAlike "
"4.0 License. To view a copy of this license, visit "
"http://creativecommons.org/licenses/by-sa/4.0/ or send a letter to "
"Creative Commons, 543 Howard Street, 5th Floor, San Francisco, "
"California, 94105, USA."
msgstr ""

#: ../../Install.md:432
msgid ""
"The intent of this license is similar to that of the RDKit itself. In "
"simple words: \"Do whatever you want with it, but please give us some "
"credit.\""
msgstr ""

